//
// Generated file, do not edit! Created by nedtool 4.6 from src/message/bluetooth/btmessage.msg.
//

#ifndef _BTMESSAGE_M_H_
#define _BTMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
	#include "OPCode.h";
// }}

/**
 * Class generated from <tt>src/message/bluetooth/btmessage.msg:22</tt> by nedtool.
 * <pre>
 * packet BTMessage
 * {
 *     int source;
 *     int destination;
 *     int opcode @enum(OPCode);
 *     string tag;
 *     string pdu;
 * }
 * </pre>
 */
class BTMessage : public ::cPacket
{
  protected:
    int source_var;
    int destination_var;
    int opcode_var;
    opp_string tag_var;
    opp_string pdu_var;

  private:
    void copy(const BTMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTMessage&);

  public:
    BTMessage(const char *name=NULL, int kind=0);
    BTMessage(const BTMessage& other);
    virtual ~BTMessage();
    BTMessage& operator=(const BTMessage& other);
    virtual BTMessage *dup() const {return new BTMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getSource() const;
    virtual void setSource(int source);
    virtual int getDestination() const;
    virtual void setDestination(int destination);
    virtual int getOpcode() const;
    virtual void setOpcode(int opcode);
    virtual const char * getTag() const;
    virtual void setTag(const char * tag);
    virtual const char * getPdu() const;
    virtual void setPdu(const char * pdu);
};

inline void doPacking(cCommBuffer *b, BTMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _BTMESSAGE_M_H_

